Terminals:
( ) none , and or not true false + - * / % = < > ! is in " ' [ ] { } for : # if elif else while break continue pass def return range raise class from import as with
Variables:
SS ALPHABET DIGIT OTHER SYNTAX SERU HASHTAG PERSEN NBO NBC MUL PLUS MIN COMMA POW DIVIDE DIV COLON LESS EQUAL GREAT SBO SBC UNDERSCORE CBO CBC PETIK1 PETIK2 ALPHANUM STRING_WORD VAR_FIRST VAR VALUE NUMBER VV BOOLEAN OP EXPRESSION RELATION STRING ARRAY DICT_CONTENT DICT COMMENT IF_HEADER IF ELIF_HEADER ELIF ELSE WHILE WHILE_HEADER FOR_HEADER FOR FOR_VAR ITERABLE ITERATE CONTINUE BREAK PASS DEF_HEADER DEF_S DEF RETURN FUNC_BODY IF_FUNC ELIF_FUNC ELSE_FUNC WHILE_FUNC FOR_FUNC WITH_FUNC ITERATE_FUNC BREAK_FUNC CONTINUE_FUNC RAISE CLASS CLASS_HEADER CLASS_S IMP_S IMPORT WITH WITH_HEADER FUNCTION NONES ANDS ORS ISS INS TRUES FALSES NOTS FORS IFS ELIFS ELSES WHILES BREAKS CONTINUES DEFS RETURNS RANGES RAISES CLASSS FROMS IMPORTS ASS WITHS
Productions:
SS -> SS SS | IF | WHILE | FOR | CLASS | DEF | IMPORT | RAISE | COMMENT | BREAK | FUNCTION | CONTINUE | WITH | PASS | VAR EQUAL VV | VAR OP EQUAL VV | NONES;
ALPHABET -> a | b | c | d | e | f | g | h | i | j | k | l | m | n | o | p | q | r | s | t | u | v | w | x | y | z | A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q | R | S | T | U | V | W | X | Y | Z;
DIGIT -> 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
OTHER -> $ | & | . | ? | @ | \ | ^ | ` | ~ | SERU | HASHTAG | PERSEN | NBO | NBC | MUL | PLUS | MIN | COMMA | DIVIDE | COLON | LESS | EQUAL | GREAT | SBO | SBC | UNDERSCORE | CBO | CBC | |;
SYNTAX -> NONES | ANDS | ORS | ISS | INS | TRUES | FALSES | NOTS | FORS | IFS | ELIFS | ELSES | WHILES | BREAKS | CONTINUES | DEFS | RETURNS | RANGES | RAISES | CLASSS | FROMS | IMPORTS | ASS | WITHS | PASS;
VAR_FIRST -> ALPHABET | UNDERSCORE;
ALPHANUM -> ALPHANUM ALPHANUM | DIGIT | VAR_FIRST;
VAR -> VAR_FIRST ALPHANUM | VAR_FIRST;
NUMBER -> NUMBER NUMBER | DIGIT;
STRING_WORD -> STRING_WORD STRING_WORD | ALPHABET | DIGIT | OTHER | SYNTAX;
VALUE -> NUMBER | BOOLEAN | STRING | ARRAY | DICT | FUNCTION | VV OP VV | NBO VV NBC | NONES;
VV -> VV COMMA VV | VALUE | VAR;
BOOLEAN -> BOOLEAN ANDS BOOLEAN | BOOLEAN ORS BOOLEAN | NOTS BOOLEAN | VV RELATION VV | TRUES | FALSES | NBO BOOLEAN NBC | VAR | NUMBER | FUNCTION;
OP -> PLUS | MIN | MUL | DIVIDE | DIV | POW | PERSEN;
EXPRESSION -> BOOLEAN | NBO BOOLEAN NBC;
RELATION -> GREAT EQUAL | LESS EQUAL | EQUAL EQUAL | SERU EQUAL | LESS | GREAT | ISS | ISS NOTS | INS | NOTS INS;
STRING -> STRING STRING | PETIK2 STRING_WORD PETIK2 | PETIK1 STRING_WORD PETIK1;
ARRAY -> SBO VV SBC | SBO SBC | SBO VV FORS VAR INS VV SBC | SBO VV FORS VAR INS RANGE SBC;
DICT -> CBO CBC | CBO DICT_CONTENT CBC;
DICT_CONTENT -> VV COLON VV | DICT_CONTENT , DICT_CONTENT;
COMMENT -> PETIK2 PETIK2 PETIK2 STRING_WORD PETIK2 PETIK2 PETIK2 | PETIK1 PETIK1 PETIK1 STRING_WORD PETIK1 PETIK1 PETIK1;
IF_HEADER -> IFS EXPRESSION COLON;
IF -> IF_HEADER SS | IF ELIF | IF ELSE | IF_HEADER BREAKS | IF_HEADER CONTINUES;
ELIF_HEADER -> ELIFS EXPRESSION COLON;
ELIF -> ELIF_HEADER SS | ELIF ELIF | ELIF ELSE | ELIF_HEADER BREAKS | ELIF_HEADER CONTINUES;
ELSE -> ELSES COLON SS | ELSES COLON BREAKS | ELSES COLON CONTINUES;
WHILE_HEADER -> WHILES EXPRESSION COLON;
WHILE -> WHILE_HEADER SS;
FOR_HEADER -> FORS FOR_VAR INS ITERABLE COLON;
FOR_VAR -> VAR | VAR COMMA FOR_VAR;
ITERABLE -> RANGES NBO VV NBC | NBO DICT NBC | DICT | NBO ARRAY NBC | ARRAY | STRING | FUNCTION;
FOR -> FOR_HEADER SS;
ITERATE -> FOR_HEADER | WHILE_HEADER | FOR | WHILE;
BREAK -> ITERATE BREAKS | ITERATE BREAKS SS;
CONTINUE -> ITERATE CONTINUES | ITERATE CONTINUES SS;
PASS -> pass;
FUNCTION -> VAR NBO VV NBC | VAR NBO NBC;
DEF_HEADER -> DEFS VAR NBO VV NBC COLON | DEFS VAR NBO NBC COLON;
DEF_S -> DEF_S DEF_S | FUNC_BODY;
FUNC_BODY -> FUNC_BODY FUNC_BODY | IF_FUNC | FOR_FUNC | WHILE_FUNC | CONTINUE_FUNC | BREAK_FUNC | CLASS | DEF | VAR EQUAL VV | VAR OP EQUAL VV | IMPORT | FUNCTION | RAISE | WITH_FUNC | PASS | RETURN | COMMENT | NONES;
DEF -> DEF_HEADER DEF_S | DEF_HEADER FUNC_BODY;
RETURN -> RETURNS BOOLEAN | RETURNS VV | RETURNS;
IF_FUNC -> IF_HEADER FUNC_BODY | IF_FUNC ELIF_FUNC | IF_FUNC ELSE_FUNC;
ELIF_FUNC -> ELIF_HEADER FUNC_BODY | ELIF_FUNC ELIF_FUNC | ELIF_FUNC ELSE_FUNC;
ELSE_FUNC -> ELSES COLON FUNC_BODY;
FOR_FUNC -> FOR_HEADER FUNC_BODY;
WHILE_FUNC -> WHILE_HEADER FUNC_BODY;
ITERATE_FUNC -> FOR_FUNC | WHILE_FUNC | WHILE_HEADER | FOR_HEADER;
CONTINUE_FUNC -> ITERATE_FUNC CONTINUES | ITERATE_FUNC CONTINUES FUNC_BODY;
BREAK_FUNC -> ITERATE_FUNC BREAKS | ITERATE_FUNC BREAKS FUNC_BODY;
WITH_FUNC -> WITH_HEADER FUNC_BODY;
RAISE -> RAISES FUNCTION | RAISES NBO NBC;
CLASS_HEADER -> CLASSS VAR COLON | CLASSS VAR NBO VV NBC COLON | CLASSS VAR NBO NBC COLON;
CLASS_S -> CLASS_S CLASS_S | IF | WHILE | FOR | CLASS | DEF | FUNCTION | VAR EQUAL VV | VAR OP EQUAL VV | BREAK | CONTINUE | PASS | COMMENT;
CLASS -> CLASS_HEADER CLASS_S;
IMPORT -> FROMS VAR IMPORTS IMP_S | IMPORTS VAR ASS VAR | IMPORTS VAR;
IMP_S -> MUL | VAR ASS VAR | VAR;
WITH_HEADER -> WITHS FUNCTION ASS VAR COLON;
WITH -> WITH_HEADER SS;
SERU -> !;
HASHTAG -> #;
PERSEN -> %;
NBO -> (;
NBC -> );
MUL -> *;
POW -> * *;
PLUS -> +;
MIN -> -;
COMMA -> ,;
DIVIDE -> /;
DIV -> / /;
COLON -> :;
LESS -> <;
EQUAL -> =;
GREAT -> >;
SBO -> [;
SBC -> ];
UNDERSCORE -> _;
CBO -> {;
CBC -> };
PETIK1 -> ';
PETIK2 -> ";
NONES -> none;
ANDS -> and;
ORS -> or;
ISS -> is;
INS -> in;
NOTS -> not;
TRUES -> true;
FALSES -> false;
FORS -> for;
IFS -> if;
ELIFS -> elif;
ELSES -> else;
BREAKS -> break;
CONTINUES -> continue;
WHILES -> while;
RANGES -> range;
DEFS -> def;
RETURNS -> return;
CLASSS -> class;
RAISES -> raise;
FROMS -> from;
IMPORTS -> import;
ASS -> as;
WITHS -> with